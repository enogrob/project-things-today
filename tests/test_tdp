#!/bin/bash

test_01_tdpn_should_print_error_bad_argument() {
    source ~/.todayrc
    assert_equals "$(__printerr '==> Error: Bad number of arguments.')" "$(things projects new)"
}

test_02_tdpn_should_return_status_code_1() {
    source ~/.todayrc
    things projects new > /dev/null
    assert_equals $? 1
}

test_03_tdpn_should_create_dir_in_Projects() {
    source ~/.todayrc
    if [ -d "$PROJECTS/project-test" ]; then rm -Rf $PROJECTS/project-test; fi

    things projects new project-test > /dev/null
    assert "test -d $PROJECTS/$PROJECT"
}

test_04_tdpn_should_create_project_project_type_vars() {
    source ~/.todayrc
    if [ -d "$PROJECTS/project-test" ]; then rm -Rf $PROJECTS/project-test; fi

    things projects new project-test > /dev/null
    assert_equals "project-test" $PROJECT
    assert_equals "project" $PROJECT_TYPE
}

test_05_tdpn_should_create_project_tag() {
    source ~/.todayrc
    if [ -d "$PROJECTS/project-test" ]; then rm -Rf $PROJECTS/project-test; fi

    things projects new project-test > /dev/null
    assert_equals "/Users/enogrob/THINGS_HOME/Projects/project-test	project" "$(tag -l $PROJECTS/$PROJECT)"
}

test_06_tdpn_should_create_project_tag_specialization() {
    source ~/.todayrc
    if [ -d "$PROJECTS/project-test" ]; then rm -Rf $PROJECTS/project-test; fi

    things projects new project-test specialization > /dev/null
    assert_equals "/Users/enogrob/THINGS_HOME/Projects/project-test	specialization" "$(tag -l $PROJECTS/$PROJECT)"
}

test_07_tdpn_should_create_project_icon() {
    source ~/.todayrc
    if [ -d "$PROJECTS/project-test" ]; then rm -Rf $PROJECTS/project-test; fi

    things projects new project-test > /dev/null
    assert "test -f $PROJECTS/$PROJECT/Icon?"
}

test_08_tdpn_should_print_error_bad_project_type() {
    source ~/.todayrc
    if [ -d "$PROJECTS/project-test" ]; then rm -Rf $PROJECTS/project-test; fi

    assert_equals "$(__printerr '==> Error: Bad project type.')" "$(things projects new project-test xxxx)"
}

test_09_tdpi_should_create_link_in_Today() {
    source ~/.todayrc
    if [ -d "$PROJECTS/project-test" ]; then rm -Rf $PROJECTS/project-test; fi
    if [ -d "$PROJECTS/project-test-xxxx" ]; then rm -Rf $PROJECTS/project-test-xxxx; fi
    if [ -L "$TODAY/project-test-xxxx" ]; then rm -f $TODAY/project-test-xxxx; fi
    if [ -L "$TODAY/project-test" ]; then rm -f $TODAY/project-test; fi

    things projects new project-test > /dev/null
    things today start > /dev/null
    TASK=`$TODOTXT -@+ list | grep -w $PROJECT`
    assert_equals `readlink "$TODAY/$TASK"` "$PROJECTS/$PROJECT"
}

test_10_tdpe_should_remove_link_in_Today() {
    source ~/.todayrc
    if [ -d "$PROJECTS/project-test" ]; then rm -Rf $PROJECTS/project-test; fi
    if [ -f "$TODAY/project-test" ]; then rm -f $TODAY/project-test; fi

    things projects new project-test > /dev/null
    things projects start > /dev/null
    things projects stop > /dev/null
    assert "! test -f $TODAY/$PROJECT"

    if [ -d "$PROJECTS/project-test" ]; then rm -Rf $PROJECTS/project-test; fi
}

test_11_tdpn_should_create_dir_in_Projects() {
    source ~/.todayrc
    if [ -d "$PROJECTS/project-test" ]; then rm -Rf $PROJECTS/project-test; fi

    things projects new Project Test > /dev/null
    assert "test -d $PROJECTS/$PROJECT"
}

test_12_tdpn_should_create_project_project_type_vars() {
    source ~/.todayrc
    if [ -d "$PROJECTS/project-test" ]; then rm -Rf $PROJECTS/project-test; fi

    things projects new Project Test > /dev/null
    assert_equals "project-test" $PROJECT
    assert_equals "project" $PROJECT_TYPE
}

test_13_tdpn_should_create_project_tag() {
    source ~/.todayrc
    if [ -d "$PROJECTS/project-test" ]; then rm -Rf $PROJECTS/project-test; fi

    things projects new Project Test > /dev/null
    assert_equals "/Users/enogrob/THINGS_HOME/Projects/project-test	project" "$(tag -l $PROJECTS/$PROJECT)"
}

test_14_tdpn_should_create_project_tag_specialization() {
    source ~/.todayrc
    if [ -d "$PROJECTS/project-test" ]; then rm -Rf $PROJECTS/project-test; fi

    things projects new Project Test specialization > /dev/null
    assert_equals "/Users/enogrob/THINGS_HOME/Projects/project-test	specialization" "$(tag -l $PROJECTS/$PROJECT)"
}

# Change to directory where bash_unit so
# that we can use our scripts under test
# more easily

cd $(dirname $0)
