THINGS=$HOME/Things
TODAY=$THINGS/Today
PROJECTS=$THINGS/Projects
RESOURCES=$THINGS/Resources

replace_icon(){
    droplet=$1
    icon=$2
    if [[ $icon =~ ^https?:// ]]; then
        curl -sLo /tmp/icon $icon
        icon=/tmp/icon
    fi
    rm -rf $droplet$'/Icon\r'
    sips -i $icon >/dev/null
    DeRez -only icns $icon > /tmp/icns.rsrc
    Rez -append /tmp/icns.rsrc -o $droplet$'/Icon\r'
    SetFile -a C $droplet
    SetFile -a V $droplet$'/Icon\r'
}

function tds() {
    case $# in 
        1) PROJECT=$1
           PROJECT_TYPE=project
           ;;
           
        2) PROJECT=$1
           PROJECT_TYPE=$2
           ;;
        *) echo "Error: Bad argument!"
           return 1
           ;;
    esac
    
    mkdir -p $PROJECTS/$PROJECT
    
    case $PROJECT_TYPE in
        specialization) 
            replace_icon $PROJECTS/$PROJECT $RESOURCES/specialization.tiff
            tag -a specialization $PROJECTS/$PROJECT
            ;;
        project)        
            replace_icon $PROJECTS/$PROJECT $RESOURCES/project.tiff
            tag -a project $PROJECTS/$PROJECT
            ;;
        ebook)
            replace_icon $PROJECTS/$PROJECT $RESOURCES/project.tiff
            tag -a ebook $PROJECTS/$PROJECT
            ;;
        tutorial)       
            replace_icon $PROJECTS/$PROJECT $RESOURCES/project.tiff
            tag -a tutorial $PROJECTS/$PROJECT
            ;;
        codewars)
            replace_icon $PROJECTS/$PROJECT $RESOURCES/project.tiff
            tag -a codewars $PROJECTS/$PROJECT
            ;;
        course)
            replace_icon $PROJECTS/$PROJECT $RESOURCES/project.tiff
            tag -a course $PROJECTS/$PROJECT
            ;;
        *)  echo "Error: Bad project type!"
            return 1
            ;;
    esac
    cd $PROJECTS/$PROJECT
    pushd .
    open -g . 
    tag -l $PROJECTS/$PROJECT
}

function tdy() {
    cd $TODAY
    tree -L 1 -Cd -l 
    open -g .
}

function tdf() {
    PROJECT=`basename $PWD`
    ln -sf $PWD $TODAY/$PROJECT
    pushd .
    tree -L 1 -Cd -l $TODAY
}

function tdl() {
    cd $PROJECTS
    tree -L 1 -Cd -l 
    open -g .
}

function tde() {
    PROJECT=`basename $PWD`
    cd $TODAY
    \rm $PROJECT
    tree -L 1 -Cd -l 
    open -g .
}

function tdg() {
    cd $PROJECTS/$PROJECT
    pushd .
    open -g .
}